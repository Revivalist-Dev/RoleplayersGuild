@model RoleplayersGuild.Site.Model.PagedResultBase
@{
    // Determine the range of page numbers to display
    int startPage = Math.Max(1, Model.PageIndex - 2);
    int endPage = Math.Min(Model.TotalPages, Model.PageIndex + 2);

    if (endPage - startPage < 4)
    {
        if (startPage == 1)
        {
            endPage = Math.Min(Model.TotalPages, 5);
        }
        else if (endPage == Model.TotalPages)
        {
            startPage = Math.Max(1, Model.TotalPages - 4);
        }
    }
}

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">

            <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                <a class="page-link" asp-all-route-data="@Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString())" asp-route-pageIndex="@(Model.PageIndex - 1)">Previous</a>
            </li>

            @for (var i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-all-route-data="@Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString())" asp-route-pageIndex="@i">@i</a>
                </li>
            }

            <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                <a class="page-link" asp-all-route-data="@Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString())" asp-route-pageIndex="@(Model.PageIndex + 1)">Next</a>
            </li>

        </ul>
    </nav>
}