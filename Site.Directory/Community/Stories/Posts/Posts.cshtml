@page "{id:int}"
@model RoleplayersGuild.Site.Directory.Community.Stories.PostsModel
@using RoleplayersGuild.Site.Utils
@inject RoleplayersGuild.Site.Services.IUserService _userService
@{
    ViewData["Title"] = Model.Story?.StoryTitle ?? "Story Posts";
    Layout = "_Layout2Col";
}

@section cphLeftCol {
    @await Component.InvokeAsync("UserNav")
}

@section cphRightCol {
    @if (!string.IsNullOrEmpty(TempData["Message"] as string))
    {
        <div class="alert alert-info">@TempData["Message"]</div>
    }

    @if (Model.Story is not null)
    {
        <div class="row g-2 mb-3">
            <div class="col-12 col-sm-3">
                <a asp-page="/Community/Stories/Search" class="btn btn-secondary w-100">Back To Stories</a>
            </div>
            @if (Model.Story.UniverseId.HasValue && Model.Story.UniverseId > 0)
            {
                <div class="col-12 col-sm-3">
                    <a asp-page="/Community/Universes/View" asp-route-id="@Model.Story.UniverseId" class="btn btn-primary w-100">View Universe</a>
                </div>
            }
            @if (await _userService.IsCurrentUserStaffAsync())
            {
                <div class="col-12 col-sm-3">
                    <a asp-page="/Admin-Panel/Stories/Edit" asp-route-id="@Model.Story.StoryId" class="btn btn-danger w-100">Admin Console</a>
                </div>
            }
        </div>

        @if (!Model.IsBlocked)
        {
            <form method="post">
                <div class="MakePost row g-2">
                    <div class="col-12">
                        <div class="input-group">
                            <label class="input-group-text" for="ddlPostAs">Post As</label>
                            <select asp-for="PostAsCharacterId" asp-items="@(new SelectList(Model.UserCharacters, "CharacterId", "CharacterDisplayName"))" class="form-select" id="ddlPostAs"></select>
                        </div>
                    </div>
                    <div class="col-12">
                        <textarea asp-for="NewPostContent" class="form-control" rows="5" placeholder="Please make sure OOC posts are properly labeled."></textarea>
                        <span asp-validation-for="NewPostContent" class="text-danger"></span>
                    </div>
                    <div class="col-sm-4 offset-sm-8">
                        <button type="submit" class="btn btn-success w-100">
                            <i class="bi bi-plus-circle"></i> Submit Post
                        </button>
                    </div>
                </div>
            </form>
            <hr />
        }

        @if (Model.Posts is not null && Model.Posts.Items.Any())
        {
            foreach (var post in Model.Posts.Items)
            {
                <div class="ThreadMessage">
                    <div class="MessageInfo">
                        <ul>
                            <li class="UserName"><a asp-page="/Community/Users/View" asp-route-id="@post.CharacterOwnerUserId" class="@post.CharacterNameClass">@post.CharacterDisplayName</a></li>
                            <li class="UserImage @(DateUtils.IsOnline(post.LastAction) ? "Online" : "Offline")">
                                <a asp-page="/Community/Users/View" asp-route-id="@post.CharacterOwnerUserId">
                                    <img src="@(string.IsNullOrEmpty(post.CardImageUrl) ? "/images/UserFiles/CharacterImages/NewCharacter.png" : post.CardImageUrl)" alt="Character Image" />
                                </a>
                            </li>
                            @if (DateUtils.IsOnline(post.LastAction))
                            {
                                <li class="UserOnline">Online</li>
                            }
                            @if (Model.CurrentUserId == post.CharacterOwnerUserId || Model.CurrentUserId == Model.Story.UserId)
                            {
                                <li><a asp-page="/User-Panel/My-Stories/My-Posts/Edit" asp-route-id="@post.StoryPostId">Edit Post</a></li>
                                <li><a href="#" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal" data-postid="@post.StoryPostId">Delete Post</a></li>
                            }
                        </ul>
                    </div>
                    <div class="MessageContent">
                        <p class="small text-muted mb-1"><small>Posted: @DateUtils.TimeAgo(post.DatePosted)</small></p>
                        <div class="linkify">@Html.Raw(post.PostContent)</div>
                    </div>
                </div>
            }

            <partial name="_PagingControls" model="Model.Posts" />
        }
        else if (!Model.IsBlocked)
        {
            <div class="alert alert-info">No posts have been made in this story yet. Be the first!</div>
        }
    }

    <div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to permanently delete this post?
                </div>
                <div class="modal-footer">
                    <form method="post" asp-page-handler="Delete">
                        <input type="hidden" name="postId" id="deletePostId" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-danger">Delete Forever</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('confirmDeleteModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var postId = button.getAttribute('data-postid');
                var modalInput = deleteModal.querySelector('#deletePostId');
                modalInput.value = postId;
            });
        });
    </script>
}
