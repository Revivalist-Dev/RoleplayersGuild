@page "{id:int}"
@model RoleplayersGuild.Site.Directory.Community.Characters.ViewCharacterModel
@using RoleplayersGuild.Site.Utils
@using System.Text.Json
@inject RoleplayersGuild.Site.Services.IViteManifestService ViteAssets
@{
    ViewData["Title"] = Model.Character.CharacterDisplayName;
    Layout = "_Layout2Col";
    ViewData["UseProfileSidebar"] = true;
    var defaultAvatarUrl = "/images/Defaults/NewAvatar.png";
    var defaultCardUrl = "/images/Defaults/NewCharacter.png";
}

@section head {
    <meta name="description" content="@Model.MetaDescription" />
    @await ViteAssets.RenderViteStyles()
}

@section cphLeftCol {
    <div class="card character-card sticky-top">
        <ul class="nav nav-tabs nav-fill" id="leftProfileTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="card-tab" data-bs-toggle="tab" data-bs-target="#card-tab-pane" type="button" role="tab">Card</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="avatar-tab" data-bs-toggle="tab" data-bs-target="#avatar-tab-pane" type="button" role="tab">Avatar</button>
            </li>
        </ul>
        <div class="tab-content profile-tab-content" id="leftProfileTabContent">
            <div class="tab-pane fade show active" id="card-tab-pane" role="tabpanel">
                <div class="card-img-wrapper">
                    @* CORRECTED: Use null-coalescing for a cleaner fallback *@
                    <img src="@(Model.Character.CardImageUrl ?? defaultCardUrl)" class="rpg-img lazyload" alt="Display Image for @Model.Character.CharacterDisplayName">
                </div>
                <div class="card-body p-2">
                    <h6 class="card-title text-truncate @Model.Character.CharacterNameClass">@Model.Character.CharacterDisplayName</h6>
                </div>
            </div>
            <div class="tab-pane fade" id="avatar-tab-pane" role="tabpanel">
                <div class="p-3 text-center">
                    <h6 class="mb-3">Full Size Avatar</h6>
                    <img src="@(Model.Character.AvatarImageUrl ?? defaultAvatarUrl)" class="rpg-thumbnail mb-4" alt="Full size avatar" style="width: 200px; height: 200px;">
                    <h6 class="mb-3">Card Preview</h6>
                    <img src="@(Model.Character.AvatarImageUrl ?? defaultAvatarUrl)" class="rpg-avatar" alt="Avatar preview">
                </div>
            </div>
        </div>
        <div class="card-body border-top">
            @if (Model.IsOnline)
            {
                <span class="badge bg-success mb-2 d-block">Currently Online</span>
            }
            <div class="d-grid gap-2 mb-3">
                @if (Model.IsOwner)
                {
                    <a asp-page="/User-Panel/My-Characters/Edit" asp-route-id="@Model.Character.CharacterId" class="btn btn-primary">Edit Character</a>
                }
                else
                {
                    <a asp-page="/User-Panel/My-Threads/Create" asp-route-toCharacterId="@Model.Character.CharacterId" class="btn btn-primary">Message</a>
                }
                <a asp-page="/Community/Users/View" asp-route-id="@Model.Character.UserId" class="btn btn-secondary">View Writer</a>
            </div>
            <div class="profile-statbox text-start">
                <p class="mb-1"><span class="stat-label">Created:</span> @(Model.Character.DateSubmitted.HasValue? DateUtils.TimeAgo(Model.Character.DateSubmitted.Value) : "N/A")</p>
                <p class="mb-1"><span class="stat-label">Last updated:</span> @(Model.Character.LastUpdated.HasValue? DateUtils.TimeAgo(Model.Character.LastUpdated.Value) : "N/A")</p>
                <p class="mb-1"><span class="stat-label">Views:</span> @Model.Character.ViewCount.ToString("N0")</p>
                <p class="mb-1"><span class="stat-label">Timezone:</span> @(Model.Character.Timezone ?? "Not Set")</p>
                <p class="mb-1"><span class="stat-label">Bookmarked by:</span> @Model.Character.BookmarkCount</p>
            </div>
        </div>
    </div>
}

@section cphRightCol {
    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-@Model.MessageType">@Model.Message</div>
    }

    @if (!Model.IsOwner && Model.IsLoggedIn)
    {
        <div class="float-end">
            <form method="post">
                <input type="hidden" name="id" value="@Model.Character.CharacterId" />
                @if (Model.IsBlocked)
                {
                    <button type="submit" asp-page-handler="Unblock" class="btn btn-success">Unblock User</button>
                }
                else
                {
                    <button type="submit" asp-page-handler="Block" class="btn btn-danger">Block User</button>
                }
            </form>
        </div>
    }

    <script id="viewer-data" type="application/json">
        @Html.Raw(JsonSerializer.Serialize(new {
            character = Model.Character,
            images = Model.Images,
            bbFrameHtml = Model.CharacterBBFrameHtml,
            isOwner = Model.IsOwner,
            userCanViewMatureContent = Model.UserCanViewMatureContent,
            genres = Model.Genres
        }, new JsonSerializerOptions { PropertyNamingPolicy = JsonNamingPolicy.CamelCase }))
    </script>

    <div id="react-root" style="min-height: 900px;">
        <div id="character-viewer-root" class="h-100">
            <div class="card h-100">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <span class="nav-link placeholder col-2"></span>
                        </li>
                        <li class="nav-item">
                            <span class="nav-link placeholder col-2"></span>
                        </li>
                        <li class="nav-item">
                            <span class="nav-link placeholder col-2"></span>
                        </li>
                    </ul>
                </div>
                <div class="card-body d-flex justify-content-center align-items-center" style="min-height: 650px;">
                    <div class="rpg-loader">
                        <div class="cell d-0"></div>
                        <div class="cell d-1"></div>
                        <div class="cell d-2"></div>
                        <div class="cell d-1"></div>
                        <div class="cell d-2"></div>
                        <div class="cell d-3"></div>
                        <div class="cell d-2"></div>
                        <div class="cell d-3"></div>
                        <div class="cell d-4"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @await ViteAssets.RenderViteScripts()
}
